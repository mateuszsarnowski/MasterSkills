// <auto-generated />
using System;
using MasterSkills.Persistence.DatabaseContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MasterSkills.Persistence.Migrations
{
    [DbContext(typeof(MasterSkillsDatabaseContext))]
    [Migration("20240520103551_CreatedAtValueAdded")]
    partial class CreatedAtValueAdded
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MasterSkills.Domain.Entities.Notes.Note", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("NoteCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("NoteCategoryId");

                    b.ToTable("Notes");
                });

            modelBuilder.Entity("MasterSkills.Domain.Entities.Notes.NoteCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("NoteCategories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 5, 20, 10, 35, 50, 236, DateTimeKind.Utc).AddTicks(5322),
                            IsDeleted = false,
                            Name = "General"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 5, 20, 10, 35, 50, 236, DateTimeKind.Utc).AddTicks(5337),
                            IsDeleted = false,
                            Name = "Work"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 5, 20, 10, 35, 50, 236, DateTimeKind.Utc).AddTicks(5339),
                            IsDeleted = false,
                            Name = "Personal"
                        });
                });

            modelBuilder.Entity("MasterSkills.Domain.Entities.Notes.Note", b =>
                {
                    b.HasOne("MasterSkills.Domain.Entities.Notes.NoteCategory", "NoteCategory")
                        .WithMany()
                        .HasForeignKey("NoteCategoryId");

                    b.Navigation("NoteCategory");
                });
#pragma warning restore 612, 618
        }
    }
}
